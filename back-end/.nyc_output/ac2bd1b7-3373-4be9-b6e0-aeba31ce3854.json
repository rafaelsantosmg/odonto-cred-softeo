{"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/01-user.spec.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/01-user.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":57}},"6":{"start":{"line":9,"column":14},"end":{"line":9,"column":52}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":66}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":46}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"10":{"start":{"line":13,"column":19},"end":{"line":13,"column":33}},"11":{"start":{"line":14,"column":0},"end":{"line":92,"column":3}},"12":{"start":{"line":16,"column":4},"end":{"line":91,"column":7}},"13":{"start":{"line":17,"column":8},"end":{"line":35,"column":11}},"14":{"start":{"line":18,"column":12},"end":{"line":21,"column":15}},"15":{"start":{"line":19,"column":16},"end":{"line":19,"column":79}},"16":{"start":{"line":20,"column":16},"end":{"line":20,"column":96}},"17":{"start":{"line":22,"column":12},"end":{"line":25,"column":15}},"18":{"start":{"line":23,"column":16},"end":{"line":23,"column":49}},"19":{"start":{"line":24,"column":16},"end":{"line":24,"column":48}},"20":{"start":{"line":26,"column":12},"end":{"line":34,"column":15}},"21":{"start":{"line":27,"column":16},"end":{"line":31,"column":19}},"22":{"start":{"line":32,"column":16},"end":{"line":32,"column":65}},"23":{"start":{"line":33,"column":16},"end":{"line":33,"column":77}},"24":{"start":{"line":36,"column":8},"end":{"line":54,"column":11}},"25":{"start":{"line":37,"column":12},"end":{"line":40,"column":15}},"26":{"start":{"line":38,"column":16},"end":{"line":38,"column":97}},"27":{"start":{"line":39,"column":16},"end":{"line":39,"column":96}},"28":{"start":{"line":41,"column":12},"end":{"line":44,"column":15}},"29":{"start":{"line":42,"column":16},"end":{"line":42,"column":49}},"30":{"start":{"line":43,"column":16},"end":{"line":43,"column":48}},"31":{"start":{"line":45,"column":12},"end":{"line":53,"column":15}},"32":{"start":{"line":46,"column":16},"end":{"line":50,"column":19}},"33":{"start":{"line":51,"column":16},"end":{"line":51,"column":65}},"34":{"start":{"line":52,"column":16},"end":{"line":52,"column":78}},"35":{"start":{"line":55,"column":8},"end":{"line":90,"column":11}},"36":{"start":{"line":56,"column":12},"end":{"line":58,"column":15}},"37":{"start":{"line":57,"column":16},"end":{"line":57,"column":79}},"38":{"start":{"line":59,"column":12},"end":{"line":61,"column":15}},"39":{"start":{"line":60,"column":16},"end":{"line":60,"column":49}},"40":{"start":{"line":62,"column":12},"end":{"line":68,"column":15}},"41":{"start":{"line":63,"column":16},"end":{"line":66,"column":82}},"42":{"start":{"line":67,"column":16},"end":{"line":67,"column":65}},"43":{"start":{"line":69,"column":12},"end":{"line":75,"column":15}},"44":{"start":{"line":70,"column":16},"end":{"line":73,"column":83}},"45":{"start":{"line":74,"column":16},"end":{"line":74,"column":65}},"46":{"start":{"line":76,"column":12},"end":{"line":82,"column":15}},"47":{"start":{"line":77,"column":16},"end":{"line":80,"column":49}},"48":{"start":{"line":81,"column":16},"end":{"line":81,"column":65}},"49":{"start":{"line":83,"column":12},"end":{"line":89,"column":15}},"50":{"start":{"line":84,"column":16},"end":{"line":87,"column":64}},"51":{"start":{"line":88,"column":16},"end":{"line":88,"column":65}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":36},"end":{"line":14,"column":37}},"loc":{"start":{"line":14,"column":42},"end":{"line":92,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":52},"end":{"line":16,"column":53}},"loc":{"start":{"line":16,"column":58},"end":{"line":91,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":71},"end":{"line":17,"column":72}},"loc":{"start":{"line":17,"column":77},"end":{"line":35,"column":9}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":19},"end":{"line":18,"column":20}},"loc":{"start":{"line":18,"column":31},"end":{"line":21,"column":13}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":18},"end":{"line":22,"column":19}},"loc":{"start":{"line":22,"column":24},"end":{"line":25,"column":13}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":26,"column":55},"end":{"line":26,"column":56}},"loc":{"start":{"line":26,"column":67},"end":{"line":34,"column":13}},"line":26},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":71},"end":{"line":36,"column":72}},"loc":{"start":{"line":36,"column":77},"end":{"line":54,"column":9}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":37,"column":19},"end":{"line":37,"column":20}},"loc":{"start":{"line":37,"column":31},"end":{"line":40,"column":13}},"line":37},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":18},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":24},"end":{"line":44,"column":13}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":45,"column":74},"end":{"line":45,"column":75}},"loc":{"start":{"line":45,"column":86},"end":{"line":53,"column":13}},"line":45},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":72},"end":{"line":55,"column":73}},"loc":{"start":{"line":55,"column":78},"end":{"line":90,"column":9}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":19},"end":{"line":56,"column":20}},"loc":{"start":{"line":56,"column":31},"end":{"line":58,"column":13}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":59,"column":18},"end":{"line":59,"column":19}},"loc":{"start":{"line":59,"column":24},"end":{"line":61,"column":13}},"line":59},"14":{"name":"(anonymous_14)","decl":{"start":{"line":62,"column":62},"end":{"line":62,"column":63}},"loc":{"start":{"line":62,"column":74},"end":{"line":68,"column":13}},"line":62},"15":{"name":"(anonymous_15)","decl":{"start":{"line":69,"column":63},"end":{"line":69,"column":64}},"loc":{"start":{"line":69,"column":75},"end":{"line":75,"column":13}},"line":69},"16":{"name":"(anonymous_16)","decl":{"start":{"line":76,"column":64},"end":{"line":76,"column":65}},"loc":{"start":{"line":76,"column":76},"end":{"line":82,"column":13}},"line":76},"17":{"name":"(anonymous_17)","decl":{"start":{"line":83,"column":67},"end":{"line":83,"column":68}},"loc":{"start":{"line":83,"column":79},"end":{"line":89,"column":13}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1},"f":{"0":5,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"b":{"0":[1,1,1],"1":[2,3],"2":[5,5]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/01-user.spec.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/01-user.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import sinon from 'sinon';\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\n\nimport api from '../api/api';\nimport User from '../database/models/user';\nimport { userFindOne } from './mocks/userMock';\n\nimport { Response } from 'superagent';\n\nchai.use(chaiHttp);\n\nconst { expect } = chai;\n\ndescribe('Testa as rotas de Users', () => {\n  let chaiHttpResponse: Response;\n  describe('Testa a requisição da rota \"/users\"', () => {\n    describe('Testa se a requisição de criar Usuário foi success', () => {\n      before(async () => {\n        sinon.stub(User, 'findOne').resolves(null);\n        sinon.stub(User, 'create').resolves(userFindOne as User);\n      });\n\n      after(() => {\n        (User.findOne as sinon.SinonStub).restore();\n        (User.create as sinon.SinonStub).restore();\n      });\n\n      it('Testa se User foi feito com sucesso!', async () => {\n        chaiHttpResponse = await chai.request(api).post('/users').send({\n          username: 'Erika',\n          email: 'erika@odontocred.com.br',\n          password: '--@65erika@99--',\n        });\n\n        expect(chaiHttpResponse.status).to.be.equal(201);\n        expect(chaiHttpResponse.body.message).to.be.equal('Success');\n      });\n    });\n\n    describe('Testa se a requisição de criar Usuário foi success', () => {\n      before(async () => {\n        sinon.stub(User, 'findOne').resolves(userFindOne as User);\n        sinon.stub(User, 'create').resolves(userFindOne as User);\n      });\n\n      after(() => {\n        (User.findOne as sinon.SinonStub).restore();\n        (User.create as sinon.SinonStub).restore();\n      });\n\n      it('Testa se não é possivel criar um usuário que ja exista!', async () => {\n        chaiHttpResponse = await chai.request(api).post('/users').send({\n          username: 'Erika',\n          email: 'erika@odontocred.com.br',\n          password: '--@65erika@99--',\n        });\n\n        expect(chaiHttpResponse.status).to.be.equal(409);\n        expect(chaiHttpResponse.body.message).to.be.equal('Conflict');\n      });\n    });\n\n    describe('Testa se a requisição foi feita com dados inválidos', () => {\n      before(async () => {\n        sinon.stub(User, 'findOne').resolves(null);\n      });\n\n      after(() => {\n        (User.findOne as sinon.SinonStub).restore();\n      });\n\n      it('Testa se usuario é not found e status é 400', async () => {\n        chaiHttpResponse = await chai\n          .request(api)\n          .post('/users')\n          .send({ email: 'an@admin.com', password: '--@65erika@99--' });\n\n        expect(chaiHttpResponse.status).to.be.equal(400);\n      });\n\n      it('Testa se password é incorrect e status é 400', async () => {\n        chaiHttpResponse = await chai\n          .request(api)\n          .post('/users')\n          .send({ email: 'erika@odontocred.com.br', password: 'admin' });\n\n        expect(chaiHttpResponse.status).to.be.equal(400);\n      });\n\n      it('Testa se não for passado email o status é 401', async () => {\n        chaiHttpResponse = await chai\n          .request(api)\n          .post('/users')\n          .send({ password: 'admin' });\n\n        expect(chaiHttpResponse.status).to.be.equal(400);\n      });\n\n      it('Testa se não for passado password o status é 401', async () => {\n        chaiHttpResponse = await chai\n          .request(api)\n          .post('/users')\n          .send({ email: 'erika@odontocred.com.br' });\n\n        expect(chaiHttpResponse.status).to.be.equal(400);\n      });\n    });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"11304a4d6c716be061a0f756dd89ba39dc9018cc","contentHash":"5972368d1e14a01865e4a395ca388418f7085b90cb1b1432a1cec68eac72160f"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/api/api.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/api/api.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":53}},"5":{"start":{"line":8,"column":22},"end":{"line":8,"column":71}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":70}},"7":{"start":{"line":10,"column":22},"end":{"line":10,"column":72}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":36}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":4},"b":{"0":[1,1,1],"1":[3,1],"2":[4,4]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/api/api.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/api/api.ts"],"names":[],"mappings":";;;;;AAAA,gCAA8B;AAC9B,sDAA8B;AAC9B,wEAAgD;AAChD,uEAA+C;AAC/C,yEAAiD;AAEjD,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAExB,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAU,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,qBAAW,CAAC,CAAC;AAE/B,GAAG,CAAC,GAAG,CAAC,qBAAW,CAAC,CAAC;AAErB,kBAAe,GAAG,CAAC","sourcesContent":["import 'express-async-errors';\nimport express from 'express';\nimport errorHandle from '../errors/errorHandle';\nimport userRouter from '../routers/userRouter';\nimport loginRouter from '../routers/loginRouter';\n\nconst api = express();\n\napi.use(express.json());\n\napi.use('/users', userRouter);\napi.use('/login', loginRouter);\n\napi.use(errorHandle);\n\nexport default api;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0273c6ca8611ada03a76cb490d5245ce2b051b00","contentHash":"936d51ce2c8210f474ced0fa4f5f747620f34c406a772f595c8b44f8c21ce6cb"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/errorHandle.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/errorHandle.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":5,"column":4},"end":{"line":13,"column":5}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":57}},"7":{"start":{"line":10,"column":8},"end":{"line":12,"column":11}},"8":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":69}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":63}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":45},"end":{"line":18,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":13,"column":5}},{"start":{"line":5,"column":4},"end":{"line":13,"column":5}}],"line":5},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":9,"4":6,"5":6,"6":6,"7":6,"8":3,"9":3,"10":0},"f":{"0":9},"b":{"0":[6,3],"1":[3,0]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/errorHandle.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/errorHandle.ts"],"names":[],"mappings":";;AAEA,yCAA6C;AAE7C,kBAAe,CACb,GAAa,EACb,IAAa,EACb,GAAa,EACb,KAAmB,EACnB,EAAE;IACF,IAAI,IAAA,4BAAgB,EAAC,GAAG,CAAC,EAAE;QACzB,MAAM,MAAM,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAC/B,KAAK,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YACvD,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SAC9C;QACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,MAAM,CAAC,OAAO;SACxB,CAAC,CAAC;KACJ;IACD,IAAI,GAAG,CAAC,MAAM,EAAE;QACd,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;KAC9D;IACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { apiError } from '../errors/apiError';\nimport { isCelebrateError } from 'celebrate';\n\nexport default (\n  err: apiError,\n  _req: Request,\n  res: Response,\n  _next: NextFunction\n) => {\n  if (isCelebrateError(err)) {\n    const result = { message: '' };\n    for (const [segment, joiError] of err.details.entries()) {\n      result.message = joiError.details[0].message;\n    }\n    return res.status(400).json({\n      message: result.message,\n    });\n  }\n  if (err.status) {\n    return res.status(err.status).json({ message: err.message });\n  }\n  return res.status(500).json({ message: 'Internal Error' });\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2f9eba128726185f304587d76ffb7e48695b3cb6","contentHash":"62cd5360ccb15900ac9cc64d8733b4ca0bc2f574eb4ee0f71ea725407e333964"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/userRouter.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/userRouter.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":82}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":27},"end":{"line":9,"column":65}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":118}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/userRouter.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/userRouter.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,mFAA2D;AAC3D,yCAAsC;AACtC,kEAA+D;AAE/D,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAA,qBAAS,EAAC,mCAAgB,CAAC,EAAE,wBAAc,CAAC,UAAU,CAAC,CAAC;AAExE,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\nimport userController from '../controllers/userController';\nimport { celebrate } from 'celebrate';\nimport { createUserSchema } from '../schemas/celebrateSchemas';\n\nconst router = express.Router();\n\nrouter.use('/', celebrate(createUserSchema), userController.createUser);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ee0f1b5ca43a5a8d1110052d139dcac0b746cfc7","contentHash":"dfc189e2b778e42009d088551519d6bcb6734f3f220aa533475395a701d94797"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/userController.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/userController.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":22},"end":{"line":6,"column":73}},"4":{"start":{"line":7,"column":19},"end":{"line":10,"column":1}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":68}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":45}},"7":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":19},"end":{"line":7,"column":20}},"loc":{"start":{"line":7,"column":39},"end":{"line":10,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":1},"f":{"0":1,"1":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/userController.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/userController.ts"],"names":[],"mappings":";;;;;AACA,0EAAkD;AAElD,MAAM,UAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAqB,EAAE;IAC1E,MAAM,OAAO,GAAG,MAAM,qBAAW,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEF,kBAAe;IACb,UAAU;CACX,CAAC","sourcesContent":["import { Request, Response } from 'express';\nimport userService from '../services/userService';\n\nconst createUser = async (req: Request, res: Response): Promise<Response> => {\n  const message = await userService.createUser(req.body);\n  return res.status(201).json({ message });\n};\n\nexport default {\n  createUser,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2f927d56a95de1bb2ac462f797ebe7666dfcff31","contentHash":"e61c5dccd8e9f3ce5bcb89f3584cae58636df6650955aefe72909060e6f45208"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/userService.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/userService.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":66}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":43}},"6":{"start":{"line":9,"column":19},"end":{"line":16,"column":1}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":67}},"8":{"start":{"line":11,"column":4},"end":{"line":12,"column":55}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":25},"end":{"line":13,"column":61}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":77}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":21}},"13":{"start":{"line":17,"column":17},"end":{"line":17,"column":26}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":19},"end":{"line":9,"column":20}},"loc":{"start":{"line":9,"column":61},"end":{"line":16,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":17},"end":{"line":17,"column":18}},"loc":{"start":{"line":17,"column":23},"end":{"line":17,"column":26}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":4},"end":{"line":12,"column":55}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":12,"column":55}},{"start":{"line":11,"column":4},"end":{"line":12,"column":55}}],"line":11}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":2,"1":2,"2":0},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/userService.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/userService.ts"],"names":[],"mappings":";;;;;AAAA,mEAA2C;AAE3C,kEAA0C;AAC1C,4CAA+C;AAE/C,MAAM,UAAU,GAAG,KAAK,EAAE,EACxB,QAAQ,EACR,KAAK,EACL,QAAQ,GACF,EAAmB,EAAE;IAC3B,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACtD,IAAI,IAAI;QAAE,MAAM,IAAA,kBAAQ,EAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAC1C,MAAM,YAAY,GAAG,IAAA,qBAAY,EAAC,QAAQ,CAAC,CAAC;IAC5C,MAAM,cAAI,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;IAC/D,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF,MAAM,QAAQ,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;AAE1B,kBAAe,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC","sourcesContent":["import User from '../database/models/user';\nimport { IUser } from '../interfaces/user.interface';\nimport apiError from '../errors/apiError';\nimport { generateHash } from '../utils/bcrypt';\n\nconst createUser = async ({\n  username,\n  email,\n  password,\n}: IUser): Promise<string> => {\n  const user = await User.findOne({ where: { email } });\n  if (user) throw apiError(409, 'Conflict');\n  const hashPassword = generateHash(password);\n  await User.create({ username, email, password: hashPassword });\n  return 'Success';\n};\n\nconst findUser = () => {};\n\nexport default { createUser, findUser };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cac0ae018223ba08bcb08aa692ee7a28c9f573bd","contentHash":"15e0d8e9662ec37d2c59879c12a0554f38ef1aa5655cdc5fb0b3abf4e1852f59"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/user.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/user.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":11},"end":{"line":7,"column":40}},"5":{"start":{"line":10,"column":0},"end":{"line":34,"column":3}},"6":{"start":{"line":35,"column":0},"end":{"line":35,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/user.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/user.ts"],"names":[],"mappings":";;;;;AAAA,yCAAmD;AACnD,yCAAmB;AAEnB,MAAM,IAAK,SAAQ,iBAAK;CAKvB;AAED,IAAI,CAAC,IAAI,CACP;IACE,EAAE,EAAE;QACF,IAAI,EAAE,mBAAO;QACb,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,IAAI;KACpB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,kBAAM;QACZ,SAAS,EAAE,KAAK;KACjB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,kBAAM;QACZ,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE,IAAI;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,kBAAM;QACZ,SAAS,EAAE,KAAK;KACjB;CACF,EACD;IACE,SAAS,EAAE,UAAE;IACb,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE,KAAK;CAClB,CACF,CAAC;AAEF,kBAAe,IAAI,CAAC","sourcesContent":["import { Model, INTEGER, STRING } from 'sequelize';\nimport db from '.';\n\nclass User extends Model {\n  public id!: number;\n  public username!: string;\n  public email!: string;\n  public password!: string;\n}\n\nUser.init(\n  {\n    id: {\n      type: INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    username: {\n      type: STRING,\n      allowNull: false,\n    },\n    email: {\n      type: STRING,\n      allowNull: false,\n      unique: true,\n    },\n    password: {\n      type: STRING,\n      allowNull: false,\n    },\n  },\n  {\n    sequelize: db,\n    modelName: 'users',\n    timestamps: false,\n  }\n);\n\nexport default User;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2bf9c7a164740ac04d91f37a91a7f1680cc9825e","contentHash":"ea071e3c8ddaeb951fea174723f15e996e9fb2d8ba80a4b016200be30f6ba0ec"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/index.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":20},"end":{"line":26,"column":40}},"26":{"start":{"line":27,"column":15},"end":{"line":27,"column":56}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21}},"s":{"0":1,"1":8,"2":8,"3":8,"4":8,"5":8,"6":18,"7":8,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":8,"21":8,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1},"f":{"0":8,"1":18,"2":0,"3":1,"4":0,"5":1},"b":{"0":[1,1,1],"1":[1,0],"2":[8,0],"3":[8,0],"4":[8,8],"5":[0,8],"6":[8,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[8,0],"15":[8,8]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/index.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/models/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAsC;AACtC,yDAA2C;AAE3C,kBAAe,IAAI,qBAAS,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import { Sequelize } from 'sequelize';\nimport * as config from '../config/config';\n\nexport default new Sequelize(config);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"87e244205493b18494aad0a2811dff37d5f5c40e","contentHash":"7f12b2ce2692fa253a348e84e30e84e2fdcc854d29b32af73418ac943d186b82"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/config/config.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/config/config.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":15},"end":{"line":15,"column":1}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":24}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":5,"column":14},"end":{"line":5,"column":51}},"type":"binary-expr","locations":[{"start":{"line":5,"column":14},"end":{"line":5,"column":37}},{"start":{"line":5,"column":41},"end":{"line":5,"column":51}}],"line":5},"1":{"loc":{"start":{"line":6,"column":14},"end":{"line":6,"column":51}},"type":"binary-expr","locations":[{"start":{"line":6,"column":14},"end":{"line":6,"column":37}},{"start":{"line":6,"column":41},"end":{"line":6,"column":51}}],"line":6},"2":{"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":54}},"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":37}},{"start":{"line":7,"column":41},"end":{"line":7,"column":54}}],"line":7},"3":{"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":44}},"type":"binary-expr","locations":[{"start":{"line":8,"column":10},"end":{"line":8,"column":29}},{"start":{"line":8,"column":33},"end":{"line":8,"column":44}}],"line":8},"4":{"loc":{"start":{"line":9,"column":10},"end":{"line":9,"column":45}},"type":"binary-expr","locations":[{"start":{"line":9,"column":10},"end":{"line":9,"column":37}},{"start":{"line":9,"column":41},"end":{"line":9,"column":45}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{"0":[1,0],"1":[1,0],"2":[1,0],"3":[1,0],"4":[1,0]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/config/config.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/database/config/config.ts"],"names":[],"mappings":";;AAAA,yBAAuB;AAGvB,MAAM,MAAM,GAAY;IACtB,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,UAAU;IAC/C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,UAAU;IAC/C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,aAAa;IAClD,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,WAAW;IACxC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI;IACzC,OAAO,EAAE,UAAU;IACnB,cAAc,EAAE;QACd,QAAQ,EAAE,GAAG;KACd;IACD,OAAO,EAAE,KAAK;CACf,CAAC;AAEF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import 'dotenv/config';\nimport { Options } from 'sequelize';\n\nconst config: Options = {\n  username: process.env.DB_USERNAME || 'postgres',\n  password: process.env.DB_PASSWORD || 'password',\n  database: process.env.DB_DATABASE || 'odonto-cred',\n  host: process.env.DB_HOST || 'localhost',\n  port: Number(process.env.DB_PORT) || 5432,\n  dialect: 'postgres',\n  dialectOptions: {\n    timezone: 'Z',\n  },\n  logging: false,\n};\n\nmodule.exports = config;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"561f1d318393ed96f30b51fd07f8398b8c43dc97","contentHash":"8143af4871ec31587ee349bd7dae76f7a03f5cf0ddf9834f8e48a29c8c71b5ba"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/apiError.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/apiError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":6,"column":2}},"2":{"start":{"line":3,"column":39},"end":{"line":6,"column":1}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":17},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":39},"end":{"line":6,"column":1}},"line":3}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":1},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/apiError.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/errors/apiError.ts"],"names":[],"mappings":";;AAKA,MAAM,QAAQ,GAAG,CAAC,MAAc,EAAE,OAAe,EAAE,EAAE,CAAC,CAAC;IACrD,MAAM;IACN,OAAO;CACR,CAAC,CAAC;AAEH,kBAAe,QAAQ,CAAC","sourcesContent":["export type apiError = {\n  status: number;\n  message: string;\n};\n\nconst apiError = (status: number, message: string) => ({\n  status,\n  message,\n});\n\nexport default apiError;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ed164b2a40036d5ab1fa4c1a748454586dc6096c","contentHash":"c3bfcdc501acca489905887ef2948a76bf0cdfcd74b1ea2b41b9396323e40782"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/bcrypt.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/bcrypt.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":55}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":21}},"6":{"start":{"line":9,"column":21},"end":{"line":11,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":61}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"9":{"start":{"line":13,"column":20},"end":{"line":15,"column":1}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":66}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":21},"end":{"line":9,"column":22}},"loc":{"start":{"line":9,"column":35},"end":{"line":11,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":20},"end":{"line":13,"column":21}},"loc":{"start":{"line":13,"column":48},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":1},"f":{"0":1,"1":1,"2":2},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/bcrypt.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/bcrypt.ts"],"names":[],"mappings":";;;;;;AAAA,wDAA8B;AAE9B,MAAM,UAAU,GAAG,EAAE,CAAC;AAEtB,MAAM,YAAY,GAAG,CAAC,QAAgB,EAAU,EAAE;IAChD,OAAO,kBAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAC/C,CAAC,CAAC;AAMO,oCAAY;AAJrB,MAAM,WAAW,GAAG,CAAC,QAAgB,EAAE,YAAoB,EAAW,EAAE;IACtE,OAAO,kBAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AACpD,CAAC,CAAC;AAEqB,kCAAW","sourcesContent":["import bcrypt from 'bcryptjs';\n\nconst saltRounds = 10;\n\nconst generateHash = (password: string): string => {\n  return bcrypt.hashSync(password, saltRounds);\n};\n\nconst compareHash = (password: string, hashPassword: string): boolean => {\n  return bcrypt.compareSync(password, hashPassword);\n};\n\nexport { generateHash, compareHash };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ebb29d12020445dec31cc762a9ec5507117810c2","contentHash":"3b671e463b5649729d2bcb6509aafb54b1323204683e1326e39c804ed29cb006"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/schemas/celebrateSchemas.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/schemas/celebrateSchemas.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":0},"end":{"line":11,"column":2}},"4":{"start":{"line":12,"column":0},"end":{"line":17,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/schemas/celebrateSchemas.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/schemas/celebrateSchemas.ts"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAElC,QAAA,gBAAgB,GAAG;IAC9B,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;QACjC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QACjC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;QACtC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;KACzC,CAAC;CACH,CAAC;AAEW,QAAA,WAAW,GAAG;IACzB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;QACjC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;QACtC,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;KACzC,CAAC;CACH,CAAC","sourcesContent":["const { Joi, Segments } = require('celebrate');\n\nexport const createUserSchema = {\n  [Segments.BODY]: Joi.object().keys({\n    username: Joi.string().required(),\n    email: Joi.string().email().required(),\n    password: Joi.string().min(6).required(),\n  }),\n};\n\nexport const loginSchema = {\n  [Segments.BODY]: Joi.object().keys({\n    email: Joi.string().email().required(),\n    password: Joi.string().min(6).required(),\n  }),\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7a5721e87552455c79647bbc5c6eb12e218de78a","contentHash":"2b93384c0890dbedf504d1568ffa763a91dbb6405b7a76a497880af711dbfd45"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/loginRouter.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/loginRouter.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":26},"end":{"line":7,"column":84}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":27},"end":{"line":9,"column":65}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":109}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":2},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/loginRouter.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/routers/loginRouter.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,qFAA6D;AAC7D,yCAAsC;AACtC,kEAA0D;AAE1D,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAA,qBAAS,EAAC,8BAAW,CAAC,EAAE,yBAAe,CAAC,KAAK,CAAC,CAAC;AAE/D,kBAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\nimport loginController from '../controllers/loginController';\nimport { celebrate } from 'celebrate';\nimport { loginSchema } from '../schemas/celebrateSchemas';\n\nconst router = express.Router();\n\nrouter.use('/', celebrate(loginSchema), loginController.login);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b19f477f5a714de9fbbf2ea66179e85b56db85a5","contentHash":"115bbb2f69fd73d3d4903cd9011c28978e9e227a2a8252996b5527a659d53dd3"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/loginController.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/loginController.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":75}},"4":{"start":{"line":7,"column":14},"end":{"line":10,"column":1}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":62}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":39}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":14},"end":{"line":7,"column":15}},"loc":{"start":{"line":7,"column":34},"end":{"line":10,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1},"f":{"0":1,"1":3},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/loginController.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/controllers/loginController.ts"],"names":[],"mappings":";;;;;AACA,4EAAoD;AAEpD,MAAM,KAAK,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAqB,EAAE;IACrE,MAAM,KAAK,GAAG,MAAM,sBAAY,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,kBAAe,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import { Request, Response } from 'express';\nimport loginService from '../services/loginService';\n\nconst login = async (req: Request, res: Response): Promise<Response> => {\n  const login = await loginService.login(req.body);\n  return res.status(200).json(login);\n};\n\nexport default { login };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"233cea8558f2b071105ea30e3c7e450e36594bb6","contentHash":"dc780792684212ceaba0e0f9d6d807c19e3f23efd6c2fd0da29d4d705ca7e59b"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/loginService.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/loginService.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":66}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":43}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":14},"end":{"line":20,"column":1}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":67}},"9":{"start":{"line":12,"column":4},"end":{"line":13,"column":56}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":56}},"11":{"start":{"line":14,"column":26},"end":{"line":14,"column":76}},"12":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"13":{"start":{"line":16,"column":8},"end":{"line":16,"column":56}},"14":{"start":{"line":17,"column":18},"end":{"line":17,"column":48}},"15":{"start":{"line":18,"column":25},"end":{"line":18,"column":29}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":31}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":14},"end":{"line":10,"column":15}},"loc":{"start":{"line":10,"column":45},"end":{"line":20,"column":1}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":4},"end":{"line":13,"column":56}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":13,"column":56}},{"start":{"line":12,"column":4},"end":{"line":13,"column":56}}],"line":12},"4":{"loc":{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":16,"column":56}},{"start":{"line":15,"column":4},"end":{"line":16,"column":56}}],"line":15}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":3,"9":3,"10":1,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":2,"1":3},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[1,2],"4":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/loginService.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/services/loginService.ts"],"names":[],"mappings":";;;;;AAAA,mEAA2C;AAE3C,kEAA0C;AAC1C,4CAA8C;AAC9C,0CAA6C;AAG7C,MAAM,KAAK,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAS,EAAmB,EAAE;IAClE,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACtD,IAAI,CAAC,IAAI;QAAE,MAAM,IAAA,kBAAQ,EAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC5C,MAAM,aAAa,GAAG,IAAA,oBAAW,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3D,IAAI,CAAC,aAAa;QAAE,MAAM,IAAA,kBAAQ,EAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IACrD,MAAM,KAAK,GAAG,IAAA,mBAAW,EAAC,IAAI,CAAC,CAAC;IAChC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;IAC1B,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;AAC7B,CAAC,CAAC;AAEF,kBAAe,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import User from '../database/models/user';\nimport { IUser } from '../interfaces/user.interface';\nimport apiError from '../errors/apiError';\nimport { compareHash } from '../utils/bcrypt';\nimport { createToken } from '../utils/token';\nimport { IToken } from '../interfaces/token.interface';\n\nconst login = async ({ email, password }: IUser): Promise<IToken> => {\n  const user = await User.findOne({ where: { email } });\n  if (!user) throw apiError(404, 'Not Found');\n  const validPassword = compareHash(password, user.password);\n  if (!validPassword) throw apiError(403, 'Forbidden');\n  const token = createToken(user);\n  const { username } = user;\n  return { username, token };\n};\n\nexport default { login };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c125787824b6e94550683007663d46a39e918c5f","contentHash":"051af7f3e23f7eba69c6390762c2ac59e872b450b533f6df8e5167f2912ec44e"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/token.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/token.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":26}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":63}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":59}},"7":{"start":{"line":10,"column":20},"end":{"line":15,"column":1}},"8":{"start":{"line":11,"column":4},"end":{"line":14,"column":7}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"10":{"start":{"line":17,"column":21},"end":{"line":19,"column":1}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":60}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":20},"end":{"line":10,"column":21}},"loc":{"start":{"line":10,"column":30},"end":{"line":15,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":21},"end":{"line":17,"column":22}},"loc":{"start":{"line":17,"column":32},"end":{"line":19,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1},"f":{"0":1,"1":1,"2":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/token.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/utils/token.ts"],"names":[],"mappings":";;;;;;AAAA,2BAAkC;AAClC,gEAA+B;AAE/B,MAAM,UAAU,GAAG,IAAA,iBAAY,EAAC,gBAAgB,CAAC,CAAC;AAE3C,MAAM,WAAW,GAAG,CAAC,IAAsB,EAAE,EAAE;IACpD,OAAO,sBAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE;QACpC,SAAS,EAAE,IAAI;QACf,SAAS,EAAE,OAAO;KACnB,CAAC,CAAC;AACL,CAAC,CAAC;AALW,QAAA,WAAW,eAKtB;AAEK,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,EAAE;IAC5C,OAAO,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACvC,CAAC,CAAC;AAFW,QAAA,YAAY,gBAEvB","sourcesContent":["import { readFileSync } from 'fs';\nimport jwt from 'jsonwebtoken';\n\nconst SECRET_KEY = readFileSync('./.private.key');\n\nexport const createToken = (user: object | boolean) => {\n  return jwt.sign({ user }, SECRET_KEY, {\n    expiresIn: '1d',\n    algorithm: 'HS256',\n  });\n};\n\nexport const decoderToken = (token: string) => {\n  return jwt.verify(token, SECRET_KEY);\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3a5289c6d0f5720a0de2fa73997c1d0629896a9f","contentHash":"017b4654b5b16cff9fafcaf8b26b1876ff029d7309ad23b0862d33a0e51084d4"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/mocks/userMock.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/mocks/userMock.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":4,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":10,"column":0},"end":{"line":15,"column":2}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":338}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/mocks/userMock.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/mocks/userMock.ts"],"names":[],"mappings":";;;AAAa,QAAA,WAAW,GAAG;IACzB,EAAE,EAAE,CAAC;IACL,QAAQ,EAAE,OAAO;IACjB,KAAK,EAAE,yBAAyB;IAChC,QAAQ,EAAE,8DAA8D;CACzE,CAAC;AAEW,QAAA,oBAAoB,GAAG;IAClC,EAAE,EAAE,CAAC;IACL,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,0BAA0B;IACjC,QAAQ,EAAE,8DAA8D;CACzE,CAAC;AAEW,QAAA,KAAK,GAChB,iUAAiU,CAAC","sourcesContent":["export const userFindOne = {\n  id: 1,\n  username: 'Erika',\n  email: 'erika@odontocred.com.br',\n  password: '$2a$10$Z/RlmiIf3O8zeBWJ7c0Pv.8oWh.CGWplRgXBxmnvNabUbhONTp3YS',\n};\n\nexport const userIncorrecPassword = {\n  id: 2,\n  username: 'Rafael',\n  email: 'rafael@odontocred.com.br',\n  password: '$2a$10$Z/RlmiIf3O8zeBWJ7c0Pv.8oWh.CGWplRgXBxmnvNabUbhONTp4YS',\n};\n\nexport const token =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6IkVyaWthIiwiZW1haWwiOiJlcmlrYUBvZG9udG9jcmVkLmNvbS5iciIsInBhc3N3b3JkIjoiJDJhJDEwJFovUmxtaUlmM084emVCV0o3YzBQdi44b1doLkNHV3BsUmdYQnhtbnZOYWJVYmhPTlRwM1lTIn0sImlhdCI6MTY2MTUzODQzOSwiZXhwIjoxNjYxNjI0ODM5fQ._3WsrhOQ3xH0G_iFedjq-q5cLBFQEv6Kikm73UujWt4';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"31ff1496d5c8959708ec4d8c22a2db8365648f9b","contentHash":"76e3e97175eb00077d8f0e237980f2286d9dd3df131614914dea90a570bebdb8"},"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/02-login.spec.ts":{"path":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/02-login.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":57}},"6":{"start":{"line":9,"column":14},"end":{"line":9,"column":52}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":66}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":46}},"9":{"start":{"line":12,"column":19},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":23},"end":{"line":13,"column":63}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":40}},"12":{"start":{"line":15,"column":19},"end":{"line":15,"column":33}},"13":{"start":{"line":17,"column":0},"end":{"line":95,"column":3}},"14":{"start":{"line":18,"column":4},"end":{"line":94,"column":7}},"15":{"start":{"line":19,"column":8},"end":{"line":41,"column":11}},"16":{"start":{"line":20,"column":12},"end":{"line":26,"column":15}},"17":{"start":{"line":21,"column":16},"end":{"line":21,"column":97}},"18":{"start":{"line":22,"column":16},"end":{"line":22,"column":87}},"19":{"start":{"line":23,"column":16},"end":{"line":25,"column":19}},"20":{"start":{"line":24,"column":20},"end":{"line":24,"column":61}},"21":{"start":{"line":27,"column":12},"end":{"line":31,"column":15}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":49}},"23":{"start":{"line":29,"column":16},"end":{"line":29,"column":57}},"24":{"start":{"line":30,"column":16},"end":{"line":30,"column":54}},"25":{"start":{"line":32,"column":12},"end":{"line":40,"column":15}},"26":{"start":{"line":33,"column":16},"end":{"line":36,"column":19}},"27":{"start":{"line":37,"column":16},"end":{"line":37,"column":65}},"28":{"start":{"line":38,"column":16},"end":{"line":38,"column":72}},"29":{"start":{"line":39,"column":16},"end":{"line":39,"column":69}},"30":{"start":{"line":42,"column":8},"end":{"line":73,"column":11}},"31":{"start":{"line":43,"column":12},"end":{"line":46,"column":15}},"32":{"start":{"line":44,"column":16},"end":{"line":44,"column":79}},"33":{"start":{"line":45,"column":16},"end":{"line":45,"column":87}},"34":{"start":{"line":47,"column":12},"end":{"line":50,"column":15}},"35":{"start":{"line":48,"column":16},"end":{"line":48,"column":49}},"36":{"start":{"line":49,"column":16},"end":{"line":49,"column":57}},"37":{"start":{"line":51,"column":12},"end":{"line":58,"column":15}},"38":{"start":{"line":52,"column":16},"end":{"line":55,"column":82}},"39":{"start":{"line":56,"column":16},"end":{"line":56,"column":65}},"40":{"start":{"line":57,"column":16},"end":{"line":57,"column":79}},"41":{"start":{"line":59,"column":12},"end":{"line":65,"column":15}},"42":{"start":{"line":60,"column":16},"end":{"line":63,"column":49}},"43":{"start":{"line":64,"column":16},"end":{"line":64,"column":65}},"44":{"start":{"line":66,"column":12},"end":{"line":72,"column":15}},"45":{"start":{"line":67,"column":16},"end":{"line":70,"column":64}},"46":{"start":{"line":71,"column":16},"end":{"line":71,"column":65}},"47":{"start":{"line":74,"column":8},"end":{"line":93,"column":11}},"48":{"start":{"line":75,"column":12},"end":{"line":80,"column":15}},"49":{"start":{"line":76,"column":16},"end":{"line":76,"column":97}},"50":{"start":{"line":77,"column":16},"end":{"line":79,"column":66}},"51":{"start":{"line":79,"column":59},"end":{"line":79,"column":64}},"52":{"start":{"line":81,"column":12},"end":{"line":84,"column":15}},"53":{"start":{"line":82,"column":16},"end":{"line":82,"column":49}},"54":{"start":{"line":83,"column":16},"end":{"line":83,"column":57}},"55":{"start":{"line":85,"column":12},"end":{"line":92,"column":15}},"56":{"start":{"line":86,"column":16},"end":{"line":89,"column":19}},"57":{"start":{"line":90,"column":16},"end":{"line":90,"column":65}},"58":{"start":{"line":91,"column":16},"end":{"line":91,"column":79}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":36},"end":{"line":17,"column":37}},"loc":{"start":{"line":17,"column":42},"end":{"line":95,"column":1}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":52},"end":{"line":18,"column":53}},"loc":{"start":{"line":18,"column":58},"end":{"line":94,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":63},"end":{"line":19,"column":64}},"loc":{"start":{"line":19,"column":69},"end":{"line":41,"column":9}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":19},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":31},"end":{"line":26,"column":13}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":79},"end":{"line":23,"column":80}},"loc":{"start":{"line":23,"column":85},"end":{"line":25,"column":17}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":18},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":24},"end":{"line":31,"column":13}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":56},"end":{"line":32,"column":57}},"loc":{"start":{"line":32,"column":68},"end":{"line":40,"column":13}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":72},"end":{"line":42,"column":73}},"loc":{"start":{"line":42,"column":78},"end":{"line":73,"column":9}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":43,"column":19},"end":{"line":43,"column":20}},"loc":{"start":{"line":43,"column":31},"end":{"line":46,"column":13}},"line":43},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":18},"end":{"line":47,"column":19}},"loc":{"start":{"line":47,"column":24},"end":{"line":50,"column":13}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":71},"end":{"line":51,"column":72}},"loc":{"start":{"line":51,"column":83},"end":{"line":58,"column":13}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":59,"column":64},"end":{"line":59,"column":65}},"loc":{"start":{"line":59,"column":76},"end":{"line":65,"column":13}},"line":59},"13":{"name":"(anonymous_13)","decl":{"start":{"line":66,"column":67},"end":{"line":66,"column":68}},"loc":{"start":{"line":66,"column":79},"end":{"line":72,"column":13}},"line":66},"14":{"name":"(anonymous_14)","decl":{"start":{"line":74,"column":71},"end":{"line":74,"column":72}},"loc":{"start":{"line":74,"column":77},"end":{"line":93,"column":9}},"line":74},"15":{"name":"(anonymous_15)","decl":{"start":{"line":75,"column":19},"end":{"line":75,"column":20}},"loc":{"start":{"line":75,"column":31},"end":{"line":80,"column":13}},"line":75},"16":{"name":"(anonymous_16)","decl":{"start":{"line":79,"column":31},"end":{"line":79,"column":32}},"loc":{"start":{"line":79,"column":59},"end":{"line":79,"column":64}},"line":79},"17":{"name":"(anonymous_17)","decl":{"start":{"line":81,"column":18},"end":{"line":81,"column":19}},"loc":{"start":{"line":81,"column":24},"end":{"line":84,"column":13}},"line":81},"18":{"name":"(anonymous_18)","decl":{"start":{"line":85,"column":62},"end":{"line":85,"column":63}},"loc":{"start":{"line":85,"column":74},"end":{"line":92,"column":13}},"line":85}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":7,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1},"f":{"0":7,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"b":{"0":[1,1,1],"1":[2,5],"2":[7,7]},"inputSourceMap":{"version":3,"file":"/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/02-login.spec.ts","sources":["/home/rsantos/trybe/projects/odonto-cred/back-end/src/tests/02-login.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import sinon from 'sinon';\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\n\nimport api from '../api/api';\nimport User from '../database/models/user';\nimport { userFindOne, token } from './mocks/userMock';\n\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\n\nimport { Response } from 'superagent';\n\nchai.use(chaiHttp);\n\nconst { expect } = chai;\n\nlet chaiHttpResponse: Response;\n\ndescribe('Testa as rotas de Login', () => {\n  describe('Testa a requisição da rota \"/login\"', () => {\n    describe('Testa se a requisição de Login foi success', () => {\n      before(async () => {\n        sinon.stub(User, 'findOne').resolves(userFindOne as User);\n        sinon.stub(bcrypt, 'compareSync').resolves(true);\n        sinon.stub(jwt, 'sign').callsFake(() => {\n          return Promise.resolve(token);\n        });\n      });\n\n      after(() => {\n        (User.findOne as sinon.SinonStub).restore();\n        (bcrypt.compareSync as sinon.SinonStub).restore();\n        (jwt.sign as sinon.SinonStub).restore();\n      });\n\n      it('Testa se login foi feito com sucesso!', async () => {\n        chaiHttpResponse = await chai.request(api).post('/login').send({\n          email: 'erika@odontocred.com.br',\n          password: '--@65erika@99--',\n        });\n\n        expect(chaiHttpResponse.status).to.be.equal(200);\n        expect(chaiHttpResponse.body).have.property('username');\n        expect(chaiHttpResponse.body).have.property('token');\n      });\n    });\n\n    describe('Testa se a requisição foi feita com dados inválidos', () => {\n      before(async () => {\n        sinon.stub(User, 'findOne').resolves(null);\n        sinon.stub(bcrypt, 'compareSync').resolves(true);\n      });\n\n      after(() => {\n        (User.findOne as sinon.SinonStub).restore();\n        (bcrypt.compareSync as sinon.SinonStub).restore();\n      });\n\n      it('Testa se usuario é não foi encontrado e status é 404', async () => {\n        chaiHttpResponse = await chai\n          .request(api)\n          .post('/login')\n          .send({ email: 'an@admin.com', password: '--@65erika@99--' });\n\n        expect(chaiHttpResponse.status).to.be.equal(404);\n        expect(chaiHttpResponse.body.message).to.be.equal('Not Found');\n      });\n\n      it('Testa se não for passado email o status é 400', async () => {\n        chaiHttpResponse = await chai\n          .request(api)\n          .post('/login')\n          .send({ password: 'admin' });\n\n        expect(chaiHttpResponse.status).to.be.equal(400);\n      });\n\n      it('Testa se não for passado password o status é 400', async () => {\n        chaiHttpResponse = await chai\n          .request(api)\n          .post('/login')\n          .send({ email: 'erika@odontocred.com.br' });\n\n        expect(chaiHttpResponse.status).to.be.equal(400);\n      });\n    });\n\n    describe('Testa se a requisição foi feita com senha inválida', () => {\n      before(async () => {\n        sinon.stub(User, 'findOne').resolves(userFindOne as User);\n        sinon\n          .stub(bcrypt, 'compareSync')\n          .callsFake((password, hashPassword) => false);\n      });\n\n      after(() => {\n        (User.findOne as sinon.SinonStub).restore();\n        (bcrypt.compareSync as sinon.SinonStub).restore();\n      });\n\n      it('Testa se password é inválido e status é 403', async () => {\n        chaiHttpResponse = await chai.request(api).post('/login').send({\n          email: 'erika@odontocred.com.br',\n          password: '--@65erika@-',\n        });\n\n        expect(chaiHttpResponse.status).to.be.equal(403);\n        expect(chaiHttpResponse.body.message).to.be.equal('Forbidden');\n      });\n    });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b431aaee8781d0044089cdc91406851b8acba5ac","contentHash":"c034f189ae489ab3abf3b4e1fd5a2090c0a3536c4cc1e498576251f02de5cd48"}}